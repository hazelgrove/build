/* Probe Projector */
:root {
  --code-text: var(--token-exp);
  --live-env-bkg: var(--T3);

  --num-closures: var(--Y1);
  --num-closures-indicated: var(--R1);

  --exp-ap: hsl(265, 75%, 80%);
  --pat-ap: hsl(220, 75%, 80%);

  --exp-indicated: var(--G0);
  --pat-indicated: var(--PAT);
  --exp-ap-indicated: var(--TYP);

  --exp-base: hsl(120, 40%, 85%);
  --pat-base: hsl(170, 40%, 85%);

  --exp-shadow: oklch(0.55 0.15 150);
  --pat-shadow: oklch(0.5 0.1 245);
  --exp-ap-shadow: oklch(0.5 0.1 300);

  --exp-cell: hsl(115, 30%, 70%);
  --pat-cell: hsl(165, 30%, 70%);
}

/* BACKING */

.projector.probe.Exp > svg {
  fill: var(--exp-base);
  filter: drop-shadow(0.7px 0.7px 0px var(--exp-shadow));
}
.projector.probe.Pat > svg {
  fill: var(--pat-base);
  filter: drop-shadow(0.7px 0.7px 0px var(--pat-shadow));
}

.projector.probe.selected > svg {
  filter: none;
}
.projector.probe.indicated.Exp > svg {
  fill: var(--exp-indicated);
}
.projector.probe.indicated.Pat > svg {
  fill: var(--pat-indicated);
}
.projector.probe:has(.ap.pinned) > svg {
  fill: var(--exp-ap-indicated);
}

/* INLINE VIEW */

.projector.probe .main {
  font-family: var(--code-font);
  font-size: var(--base-font-size);
  color: var(--code-text);
  display: flex;
  flex-direction: row;
  cursor: pointer;
  align-items: center;
  justify-content: space-evenly;
  width: 100%;
}
.projector.probe.indicated:not(.selected):not(.error) .main,
.cell-item:not(.selected):not(.error) .projector.probe.indicated .main {
  color: white;
}

@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}
.projector.probe .live-offside:empty + * .icon {
  animation: rotate 5s linear infinite;
}
.projector.probe .main .icon {
  scale: 0.95;
  width: 16px;
  height: 16px;
  background-image: url(../../img/noun-search-5661270.svg);
  background-size: cover;
  filter: invert(1) brightness(0.5) sepia(1) saturate(2) hue-rotate(75deg);
}
.projector.probe .main.ap .icon {
  background-image: url(../../img/noun-telescope-7245201.svg);
  rotate: -6deg;
  translate: -2px;
}
.projector.probe.indicated:not(.selected):not(.error) .main .icon {
  filter: invert(1);
}

/* OVERLAY VIEW */

.overlays .projector.probe .num-closures {
  pointer-events: auto;
  position: absolute;
  right: -0.55em;
  top: -0.3em;
  transform-origin: top right;
  scale: 0.6;
  color: oklch(1 0 0);
  font-family: var(--ui-font);
  display: flex;
  justify-content: center;
  border-radius: 2em;
  font-size: 0.7em;
  padding: 0.3em;
  min-width: 1.2em;
  --original-bg: inherit;
  background-color: var(--original-bg);
}
.overlays .projector.probe.Exp .num-closures {
  --original-bg: var(--exp-indicated);
}
.overlays .projector.probe.Pat .num-closures {
  --original-bg: var(--pat-indicated);
}
.overlays .projector.probe.error:not(.selected) .num-closures {
  --original-bg: var(--R1);
}
.overlays .projector.probe.selected .num-closures {
  --original-bg: var(--num-closures);
  color: black;
}

@keyframes blink-probe-caret {
  from,
  to {
    background-color: var(--R1);
  }

  50% {
    background-color: var(--original-bg);
  }
}
.overlays .projector.probe.indicated.Right .num-closures {
  /* Commented out for now due to desync problem */
  /* animation: 1s blink-probe-caret step-end infinite; */
  background-color: var(--num-closures-indicated) !important;
}

.overlays .projector.probe.selected:not(.indicated) .num-closures {
  color: var(--STONE);
}

.overlays .projector.probe .pin {
  pointer-events: auto;
  position: absolute;
  left: -0.9em;
  top: -0.2em;
  height: 1.3em;
  width: 1.3em;
  border-radius: 1em;
  filter: invert(1);
  background: url(../../img/noun-pinned-1560993.svg) #33ffff;
  background-size: 70%;
  background-position: center;
  background-repeat: no-repeat;
  transform-origin: top right;
  scale: 0.6;
}
.overlays .projector.probe.indicated.Left .pin {
  background-color: oklch(0.8 0.18 201.83);
}

/* OFFSIDE VIEW */

.projector.probe .live-offside {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 6px;
}
.projector.probe .live-offside:empty {
  display: none;
}

.projector.probe .live-equals {
  font-weight: 800;
  opacity: 80%;
}
.projector.probe.Exp .live-equals {
  color: var(--exp-base);
}
.projector.probe.Pat .live-equals {
  color: var(--pat-base);
}
.projector.probe.indicated .live-equals {
  opacity: 100%;
}
.projector.probe.Exp.indicated .live-equals {
  color: var(--exp-indicated);
}
.projector.probe.Pat.indicated .live-equals {
  color: var(--pat-indicated);
}

.projector.probe .live-offside .nav-bar {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 2px;
  position: absolute;
  left: -1.75em;
}

.projector.probe .live-offside .ellipsis {
  cursor: pointer;
}
.projector.probe.Exp .live-offside .ellipsis {
  color: var(--exp-base);
}
.projector.probe.Pat .live-offside .ellipsis {
  color: var(--pat-base);
}
.projector.probe.indicated.Exp .live-offside .ellipsis {
  color: var(--exp-indicated);
}
.projector.probe.indicated.Pat .live-offside .ellipsis {
  color: var(--pat-indicated);
}
.projector.probe .live-offside .ellipsis:hover {
  /* filter: brightness(1.2) saturate(2); */
  scale: 1.4;
}

.projector.probe .live-offside .closure-groups {
  display: flex;
  flex-direction: row;
  gap: 2px;
}

.projector.probe .closure-group {
  display: flex;
  gap: 2px;
  align-items: center;
}

.projector.probe .closure-group:not(:last-child)::after {
  content: "â€¢";
  font-size: 0.4em;
  margin: -1px;
}
.projector.probe.Exp .closure-group:not(:last-child)::after {
  color: var(--exp-indicated);
}
.projector.probe.Pat .closure-group:not(:last-child)::after {
  color: var(--pat-indicated);
}

.projector.probe .value {
  cursor: pointer;
}

.projector.probe .closure .code {
  line-height: initial;
}

/* .projector.probe .closure:first-child .value:hover .code-text {
  cursor: col-resize;
} */

/* TOKEN BKG */
.projector.probe .closure {
  border-radius: 0.05em 0.05em 0.05em 0.2em;
  transition: filter 0.14s ease-in-out;
  transition: scale 0.07s ease-in-out;
}
.projector.probe.Exp .closure {
  --bottom-border-clr: var(--exp-shadow);
  background-color: var(--exp-base);
  border-bottom: 1px solid var(--bottom-border-clr);
}
.projector.probe.Pat .closure {
  --bottom-border-clr: var(--pat-shadow);
  background-color: var(--pat-base);
  border-bottom: 1px solid var(--bottom-border-clr);
}
.projector.probe .closure:has(.value.cursor-callee) {
  --below-shadow: var(--exp-ap-indicated);
}
.projector.probe .closure:has(.value.cursor-callee.indirect) {
}
.projector.probe .closure:has(.value.cursor-callee.direct) {
}
.projector.probe .closure:has(.value.cursor-caller.direct) {
  outline: 1px solid var(--exp-ap-indicated);
  border-color: var(--exp-ap-indicated);
  background-color: var(--exp-ap-indicated);
  /* 
  box-shadow: inset 3px 3px 0 #551da0; */
}
.projector.probe .closure:has(.value.cursor-caller.indirect) {
  outline: 1px solid var(--exp-ap-indicated);
  border-color: var(--exp-ap-indicated);
  background-color: var(--exp-ap-indicated);
  /* background-color: var(--exp-ap-indicated);
  box-shadow: inset 6px 6px 0 #551da0; */
  /* opacity: 70%; */
}
.projector.probe .closure:has(.value.cursor-unrelated),
.projector.probe .closure:has(.value.cursor-callee.indirect) {
  filter: contrast(0.32) brightness(1.51) saturate(0.7);
  /* opacity: 40%; */
}
.projector.probe.Pat .closure:has(.value.cursor-unrelated.level0) {
  border-bottom-color: #73c1e1;
}
.projector.probe.Exp .closure:has(.value.cursor-unrelated.level0) {
  border-bottom-color: #73e1a3;
}

/* .projector.probe.indicated .closure:has(.value.cursor-caller.below),
.projector.probe.indicated .closure:has(.value.cursor-caller.above),
.projector.probe.indicated .closure:has(.value.cursor-callee.below),
.projector.probe.indicated .closure:has(.value.cursor-callee.above) {
  scale: 0.83;
}
.projector.probe.indicated .closure:has(.value.cursor-caller.L1),
.projector.probe.indicated .closure:has(.value.cursor-callee.L1) {
  scale: 0.93;
}
.projector.probe.indicated .closure:has(.value.cursor-caller.L2),
.projector.probe.indicated .closure:has(.value.cursor-callee.L2) {
  scale: 0.89;
} */
/* .projector.probe.indicated .closure:has(.value.cursor-callee.above),
.projector.probe.indicated .closure:has(.value.cursor-caller.above) {
  top: -3px;
  position: relative;
}
.projector.probe.indicated .closure:has(.value.cursor-callee.below),
.projector.probe.indicated .closure:has(.value.cursor-caller.below) {
  top: 3px;
  position: relative;
}
.projector.probe.indicated .closure:has(.value.cursor-caller.above.L1),
.projector.probe.indicated .closure:has(.value.cursor-callee.above.L1) {
  top: -2px;
}
.projector.probe.indicated .closure:has(.value.cursor-caller.below.L1),
.projector.probe.indicated .closure:has(.value.cursor-callee.below.L1) {
  top: 2px;
} */

.projector.probe .closure:has(.value.above) {
  /* --below-shadow: #d0cab7bb; */
  --below-shadow: oklch(0.89 0.07 302.03);
}
.projector.probe .closure:has(.value.above.indirect) {
  background-color: oklch(0.4 0.18 300);
  box-shadow: inset 24px 25px 0 #551da0;
  filter: drop-shadow(0 5.25px 0 var(--below-shadow));
}
.projector.probe .closure:has(.value.above.direct.L1) {
  background-color: oklch(0.7 0.18 300);
  box-shadow: inset 1.5px 1.5px 0 #551da0;
  filter: drop-shadow(0 1.5px 0 var(--below-shadow));
}
.projector.probe .closure:has(.value.above.indirect.L2) {
  background-color: oklch(0.66 0.18 300);
  box-shadow: inset 3px 3px 0 #551da0;
  filter: drop-shadow(0 2.25px 0 var(--below-shadow));
}
.projector.probe .closure:has(.value.above.indirect.L3) {
  background-color: oklch(0.62 0.18 300);
  box-shadow: inset 6px 6px 0 #551da0;
  filter: drop-shadow(0 3px 0 var(--below-shadow));
}
.projector.probe .closure:has(.value.above.indirect.L4) {
  background-color: oklch(0.58 0.18 300);
  box-shadow: inset 9px 9px 0 #551da0;
  filter: drop-shadow(0 3.75px 0 var(--below-shadow));
}
.projector.probe .closure:has(.value.above.indirect.L5) {
  background-color: oklch(0.54 0.18 300);
  box-shadow: inset 14px 14px 0 #551da0;
  filter: drop-shadow(0 4.5px 0 var(--below-shadow));
}
.projector.probe .closure:has(.value.above.indirect.L6) {
  background-color: oklch(0.5 0.18 300);
  box-shadow: inset 18px 18px 0 #551da0;
  filter: drop-shadow(0 5.25px 0 var(--below-shadow));
}

.projector.probe.Exp .closure {
  --below-shadow: #00c17d;
}
.projector.probe.Pat .closure {
  --below-shadow: #00aec1;
}

.projector.probe .closure:has(.value.above) {
  top: -3.5px;
  box-shadow: 0 3.5px 0 #d0cab7bb;
  position: relative;
}
.projector.probe .closure:has(.value.above.L1) {
  top: -1.5px;
  box-shadow: 0 1.5px 0 #d0cab7bb;
}
.projector.probe .closure:has(.value.below) {
  position: relative;
  border-top: 1px solid var(--pat-shadow);
  border-bottom: none;
  border-radius: 0.05em 0.2em 0.05em 0.2em;
  border: none;

  translate: 0 3px;
  box-shadow: 0px -0.75px 0 var(--below-shadow),
    0px -1.5px 0 var(--below-shadow), 0px -2.25px 0 var(--below-shadow),
    0px -3px 0 var(--below-shadow);
}

.projector.probe .closure:has(.value.above.L2) {
  top: -2.5px;
  box-shadow: 0 2.5px 0 #d0cab7bb;
}
.projector.probe .closure:has(.value.below.L1) {
  border: none;
  translate: 0 0.75px;
  box-shadow: 0px -0.75px 0 var(--below-shadow);
  border: none;
}

.projector.probe .closure:has(.value.below.L2) {
  border: none;
  translate: 0 1.5px;
  box-shadow: 0px -0.75px 0 var(--below-shadow),
    0px -1.5px 0 var(--below-shadow);
}

.projector.probe .closure:has(.value.below.L3) {
  border: none;
  translate: 0 2.25px;
  box-shadow: 0px -0.75px 0 var(--below-shadow),
    0px -1.5px 0 var(--below-shadow), 0px -2.25px 0 var(--below-shadow);
}

.projector.probe .closure:has(.value.below.L4) {
  border: none;
  translate: 0 3px;
  box-shadow: 0px -0.75px 0 var(--below-shadow),
    0px -1.5px 0 var(--below-shadow), 0px -2.25px 0 var(--below-shadow),
    0px -3px 0 var(--below-shadow);
}

/* TOKEN BKG INDICATED + HOVER */
.projector.probe.indicated .closure:has(.value.cursor-unrelated) {
  filter: contrast(0.5) brightness(1.32) saturate(0.7);
  /* opacity: 60%; */
}
.projector.probe.indicated .closure:has(.value.cursor) {
  background: white;
  outline-width: 2.1px;
  outline-style: solid;
  /* border-bottom-width: 1.5px; */
  border: none;
}
.todo {
  /*TODO(andrew)*/
  color: oklch(0.82 0.13 150.57);
  filter: none;
}
.projector.probe.indicated.Exp .closure:has(.value.cursor),
.projector.probe.Exp .closure:hover {
  outline-color: var(--exp-indicated);
  border-color: var(--exp-indicated);
  border: none;
}
.projector.probe.indicated.Pat .closure:has(.value.cursor),
.projector.probe.Pat .closure:hover {
  outline-color: var(--pat-indicated);
  border-color: var(--pat-indicated);
}
.projector.probe.indicated .closure:has(.value.cursor.ap),
.projector.probe.Exp .closure:has(.value.ap):hover {
  outline-color: var(--exp-ap-indicated);
  border-color: var(--exp-ap-indicated);
}
.projector.probe .closure:hover {
  /* transform-origin: bottom left; */
  /* scale: 1.18; */
  z-index: var(--projector-indicated-z);
  position: relative;
  /* opacity: 100% !important; */
  outline-width: 1px;
  outline-style: solid;
  outline-offset: -0.1px;
  border-width: 1.5px;
  /* top: 0.5px; */
  position: relative;
  filter: drop-shadow(1.5px 3px 0 #95876452) !important;
}

.projector.probe .closure {
  --num-levels: 7;
  --base: 0;
  --init: calc(0.18 * (var(--num-levels) - var(--base)) / var(--num-levels));
  --first-scale: calc(1 + var(--init));
  --second-scale: calc(1 + (var(--init) * 2 / 3));
  --third-scale: calc(1 + (var(--init) * 1 / 3));
}
.projector.probe .closure:has(.s0) {
  --base: 0;
}
.projector.probe .closure:has(.s1) {
  --base: 1;
}
.projector.probe .closure:has(.s2) {
  --base: 2;
}
.projector.probe .closure:has(.s3) {
  --base: 3;
}
.projector.probe .closure:has(.s4) {
  --base: 4;
}
.projector.probe .closure:has(.s5) {
  --base: 5;
}
.projector.probe .closure:has(.s6) {
  --base: 6;
}
.projector.probe .closure:has(.extra) {
  --base: 7;
}
.projector.probe .closure:hover {
  scale: var(--first-scale);
}
.projector.probe .closure:hover + .closure,
.projector.probe .closure:has(+ .closure:hover) {
  scale: var(--second-scale);
}
.projector.probe .closure:hover + * + .closure,
.projector.probe .closure:has(+ * + .closure:hover) {
  scale: var(--third-scale);
}

/* TOKENS */

.projector.probe.Exp .value.cursor .code-text .token {
  color: var(--exp-indicated);
}
.projector.probe.Pat .value.cursor .code-text .token {
  color: var(--pat-indicated);
}

.projector.probe .value.cursor-unrelated .code-text .token,
.projector.probe .value.cursor-caller .code-text .token {
  filter: invert(1) brightness(10);
}
.projector.probe .value.cursor-callee.indirect .code-text .token {
  color: white;
}
.projector.probe .value.cursor-callee.direct .code-text .token {
  color: var(--exp-ap-indicated);
}

.projector.probe .value .token.explicit-hole {
  color: white;
  text-shadow: none;
}

/* LIVE ENV */

.projector.probe .live-env {
  background-color: var(--live-env-bkg);
  border-radius: 0 0.2em 0.2em 0.2em;
  padding: 0.2em;
  display: none;
  position: absolute;
  top: 1.4em;
  scale: 0.86;
  transform-origin: top left;
}

.projector.probe .live-env .live-env-entry {
  display: flex;
  flex-direction: row;
  gap: 0.3em;
  align-items: baseline;
  color: var(--GB0);
  font-family: var(--code-font);
  font-size: var(--base-font-size);
}

.projector.probe.indicated .closure:hover .live-env {
  display: block;
}
.projector.probe.indicated .closure:hover .live-env:empty,
.projector.probe.Pat.indicated .closure:hover .live-env {
  display: none;
}

.projector.probe .nav-arrow {
  width: 10px;
  height: 13px;

  color: var(--exp-indicated);
  background: url(../../img/noun-arrow-3130579.svg);
  background-size: cover;
  color: var(--NONE);
}
.projector.probe .nav-arrow:not(.disabled) {
  cursor: pointer;
}
.projector.probe .nav-arrow:last-child {
  transform: rotate(180deg);
}
.projector.probe.Exp .nav-arrow {
  filter: invert(1) brightness(0.7) sepia(1) hue-rotate(61deg) saturate(0.6);
}
.projector.probe.Pat .nav-arrow {
  filter: invert(1) brightness(0.7) sepia(1) hue-rotate(141deg) saturate(0.6);
}

.projector.probe:not(.indicated) .nav-arrow {
  pointer-events: none;
  opacity: 0% !important;
}

.projector.probe .nav-arrow.disabled {
  opacity: 15%;
}

.projector.probe .nav-arrow:not(.disabled):hover {
  filter: brightness(1.05) saturate(1.05);
}
