/* Probe Projector */
:root {
  --code-text: var(--token-exp);
  --live-env-bkg: var(--T3);

  --num-closures: var(--Y1);
  --num-closures-indicated: var(--R1);

  --exp-ap: hsl(265, 75%, 80%);
  --pat-ap: hsl(220, 75%, 80%);

  --exp-indicated: var(--G0);
  --pat-indicated: var(--PAT);
  --exp-ap-indicated: var(--TYP);

  --exp-base: hsl(120, 40%, 85%);
  --pat-base: hsl(170, 40%, 85%);

  --exp-shadow: oklch(0.55 0.15 150);
  --pat-shadow: oklch(0.5 0.1 245);
  --typ-shadow: oklch(0.5 0.1 300);

  --exp-cell: hsl(115, 30%, 70%);
  --pat-cell: hsl(165, 30%, 70%);
}

/* BACKING */

.projector.probe.Exp > svg {
  fill: var(--exp-base);
  filter: drop-shadow(0.7px 0.7px 0px var(--exp-shadow));
}
.projector.probe.Pat > svg {
  fill: var(--pat-base);
  filter: drop-shadow(0.7px 0.7px 0px var(--pat-shadow));
}

.projector.probe.selected > svg {
  filter: none;
}
.projector.probe.indicated.Exp > svg {
  fill: var(--exp-indicated);
}
.projector.probe.indicated.Pat > svg {
  fill: var(--pat-indicated);
}
.projector.probe:has(.ap.pinned) > svg {
  fill: var(--exp-ap-indicated);
}

/* INLINE VIEW */

.projector.probe .main {
  font-family: var(--code-font);
  font-size: var(--base-font-size);
  color: var(--code-text);
  display: flex;
  flex-direction: row;
  cursor: pointer;
  align-items: center;
  justify-content: space-evenly;
  width: 100%;
}
.projector.probe.indicated:not(.selected) .main,
.cell-item:not(.selected) .projector.probe.indicated .main {
  color: white;
}

@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}
.projector.probe .live-offside:empty + * .icon {
  animation: rotate 5s linear infinite;
}
.projector.probe .main .icon {
  width: 16px;
  height: 16px;
  background-image: url(../../img/noun-search-5661270.svg);
  background-size: cover;
  filter: invert(1) brightness(0.4) sepia(1) saturate(1.8) hue-rotate(75deg);
}
.projector.probe .main.ap .icon {
  background-image: url(../../img/noun-telescope-7245201.svg);
}
.projector.probe.indicated:not(.selected) .main .icon {
  filter: invert(1);
}

/* OVERLAY VIEW */

.overlays .projector.probe .num-closures {
  pointer-events: auto;
  position: absolute;
  right: -0.55em;
  top: -0.3em;
  transform-origin: top right;
  scale: 0.6;
  color: oklch(1 0 0);
  font-family: var(--ui-font);
  display: flex;
  justify-content: center;
  border-radius: 2em;
  font-size: 0.7em;
  padding: 0.3em;
  min-width: 1.2em;
  --original-bg: inherit;
  background-color: var(--original-bg);
}
.overlays .projector.probe.Exp .num-closures {
  --original-bg: var(--exp-indicated);
}
.overlays .projector.probe.Pat .num-closures {
  --original-bg: var(--pat-indicated);
}
.overlays .projector.probe.selected .num-closures {
  --original-bg: var(--num-closures);
}

@keyframes blink-probe-caret {
  from,
  to {
    background-color: var(--R1);
  }

  50% {
    background-color: var(--original-bg);
  }
}
.overlays .projector.probe.indicated.Right .num-closures {
  /* Commented out for now due to desync problem */
  /* animation: 1s blink-probe-caret step-end infinite; */
  background-color: var(--num-closures-indicated) !important;
}

.overlays .projector.probe.selected:not(.indicated) .num-closures {
  color: var(--STONE);
}

.overlays .projector.probe .pin {
  pointer-events: auto;
  position: absolute;
  left: -0.9em;
  top: -0.2em;
  height: 1.3em;
  width: 1.3em;
  border-radius: 1em;
  filter: invert(1);
  background: url(../../img/noun-pinned-1560993.svg) #33ffff;
  background-size: 70%;
  background-position: center;
  background-repeat: no-repeat;
  transform-origin: top right;
  scale: 0.6;
}
.overlays .projector.probe.indicated.Left .pin {
  background-color: oklch(0.8 0.18 201.83);
}

/* OFFSIDE VIEW */

.projector.probe .live-offside {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 6px;
}
.projector.probe .live-offside:empty {
  display: none;
}

.projector.probe .live-equals {
  font-weight: 800;
  opacity: 80%;
}
.projector.probe.Exp .live-equals {
  color: var(--exp-base);
}
.projector.probe.Pat .live-equals {
  color: var(--pat-base);
}
.projector.probe.indicated .live-equals {
  opacity: 100%;
}
.projector.probe.Exp.indicated .live-equals {
  color: var(--exp-indicated);
}
.projector.probe.Pat.indicated .live-equals {
  color: var(--pat-indicated);
}

.projector.probe .live-offside .nav-bar {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 2px;
  position: absolute;
  left: -1.75em;
}

.projector.probe .live-offside .ellipsis {
  cursor: pointer;
}
.projector.probe.Exp .live-offside .ellipsis {
  color: var(--exp-base);
}
.projector.probe.Pat .live-offside .ellipsis {
  color: var(--pat-base);
}
.projector.probe.indicated.Exp .live-offside .ellipsis {
  color: var(--exp-indicated);
}
.projector.probe.indicated.Pat .live-offside .ellipsis {
  color: var(--pat-indicated);
}
.projector.probe .live-offside .ellipsis:hover {
  /* filter: brightness(1.2) saturate(2); */
  scale: 1.4;
}

.projector.probe .live-offside .closure-groups {
  display: flex;
  flex-direction: row;
  gap: 2px;
}

.projector.probe .closure-group {
  display: flex;
  gap: 2px;
  align-items: center;
}

.projector.probe .closure-group:not(:last-child)::after {
  content: "â€¢";
  font-size: 0.4em;
  margin: -1px;
}
.projector.probe.Exp .closure-group:not(:last-child)::after {
  color: var(--exp-indicated);
}
.projector.probe.Pat .closure-group:not(:last-child)::after {
  color: var(--pat-indicated);
}

.projector.probe .value {
  cursor: pointer;
}

.projector.probe .closure .code {
  line-height: initial;
}

/* .projector.probe .closure:first-child .value:hover .code-text {
  cursor: col-resize;
} */

/* TOKEN BKG */
.projector.probe .closure {
  border-radius: 0.05em 0.05em 0.05em 0.2em;
  transition: filter 0.14s ease-in-out;
  transition: scale 0.07s ease-in-out;
}
.projector.probe.Exp .closure {
  background-color: var(--exp-base);
  border-bottom: 1px solid var(--exp-shadow);
}
.projector.probe.Pat .closure {
  background-color: var(--pat-base);
  border-bottom: 1px solid var(--pat-shadow);
}
.projector.probe .closure:has(.value.cursor-callee.direct) {
  outline: 1px solid var(--exp-ap-indicated);
  border-color: var(--exp-ap-indicated);
}
.projector.probe .closure:has(.value.cursor-caller.direct) {
  outline: 1px solid var(--exp-ap-indicated);
  border-color: var(--exp-ap-indicated);
  background-color: var(--exp-ap-indicated);
  box-shadow: inset 4px 4px 0 #551da0;
}
.projector.probe .closure:has(.value.cursor-caller.indirect) {
  outline: 1px solid var(--exp-ap-indicated);
  border-color: var(--exp-ap-indicated);
  background-color: var(--exp-ap-indicated);
  box-shadow: inset 4px 4px 0 #551da0;
  opacity: 50%;
}
.projector.probe .closure:has(.value.cursor-unrelated),
.projector.probe .closure:has(.value.cursor-callee.indirect) {
  filter: contrast(0.32) brightness(1.51) saturate(0.7);
  /* opacity: 40%; */
}

/* TOKEN BKG INDICATED + HOVER */
.projector.probe.indicated .closure:has(.value.cursor-unrelated) {
  filter: contrast(0.5) brightness(1.32) saturate(0.7);
  /* opacity: 60%; */
}
.projector.probe.indicated .closure:has(.value.cursor) {
  background: white;
  outline-width: 2.1px;
  outline-style: solid;
  border-bottom-width: 1.5px;
}
.projector.probe.indicated.Exp .closure:has(.value.cursor),
.projector.probe.Exp .closure:hover {
  outline-color: var(--exp-indicated);
  border-color: var(--exp-indicated);
}
.projector.probe.indicated.Pat .closure:has(.value.cursor),
.projector.probe.Pat .closure:hover {
  outline-color: var(--pat-indicated);
  border-color: var(--pat-indicated);
}
.projector.probe.indicated .closure:has(.value.cursor.ap),
.projector.probe.Exp .closure:has(.value.ap):hover {
  outline-color: var(--exp-ap-indicated);
  border-color: var(--exp-ap-indicated);
}
.projector.probe .closure:hover {
  /* transform-origin: bottom left; */
  /* scale: 1.18; */
  z-index: var(--projector-indicated-z);
  position: relative;
  /* opacity: 100% !important; */
  outline-width: 1px;
  outline-style: solid;
  outline-offset: -0.1px;
  border-width: 1.5px;
  /* top: 0.5px; */
  position: relative;
  filter: drop-shadow(1.5px 3px 0 #95876452) !important;
}
.projector.probe .closure:hover:not(:has(.long)) {
  scale: 1.18;
}
.projector.probe .closure:hover + .closure:not(:has(.long)),
.projector.probe .closure:has(+ .closure:hover):not(:has(.long)) {
  scale: 1.12;
}
.projector.probe .closure:hover + * + .closure:not(:has(.long)),
.projector.probe .closure:has(+ * + .closure:hover):not(:has(.long)) {
  scale: 1.04;
}

/* TOKENS */

.projector.probe.Exp .value.cursor .code-text .token {
  color: var(--exp-indicated);
}
.projector.probe.Pat .value.cursor .code-text .token {
  color: var(--pat-indicated);
}

.projector.probe .value.cursor-unrelated .code-text .token,
.projector.probe .value.cursor-caller .code-text .token {
  filter: invert(1) brightness(10);
}
.projector.probe .value.cursor-callee .code-text .token {
  color: var(--exp-ap-indicated);
}

/* LIVE ENV */

.projector.probe .live-env {
  background-color: var(--live-env-bkg);
  border-radius: 0 0.2em 0.2em 0.2em;
  padding: 0.2em;
  display: none;
  position: absolute;
  top: 1.4em;
  scale: 0.86;
  transform-origin: top left;
}

.projector.probe .live-env .live-env-entry {
  display: flex;
  flex-direction: row;
  gap: 0.3em;
  align-items: baseline;
  color: var(--GB0);
  font-family: var(--code-font);
  font-size: var(--base-font-size);
}

.projector.probe.indicated .closure:hover .live-env {
  display: block;
}
.projector.probe.indicated .closure:hover .live-env:empty,
.projector.probe.Pat.indicated .closure:hover .live-env {
  display: none;
}

.projector.probe .nav-arrow {
  width: 10px;
  height: 13px;

  color: var(--exp-indicated);
  background: url(../../img/noun-arrow-3130579.svg);
  background-size: cover;
  color: var(--NONE);
}
.projector.probe .nav-arrow:not(.disabled) {
  cursor: pointer;
}
.projector.probe .nav-arrow:last-child {
  transform: rotate(180deg);
}
.projector.probe.Exp .nav-arrow {
  filter: invert(1) brightness(0.7) sepia(1) hue-rotate(61deg) saturate(0.6);
}
.projector.probe.Pat .nav-arrow {
  filter: invert(1) brightness(0.7) sepia(1) hue-rotate(141deg) saturate(0.6);
}

.projector.probe:not(.indicated) .nav-arrow {
  pointer-events: none;
  opacity: 0% !important;
}

.projector.probe .nav-arrow.disabled {
  opacity: 15%;
}

.projector.probe .nav-arrow:not(.disabled):hover {
  filter: brightness(1.05) saturate(1.05);
}
